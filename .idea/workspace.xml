<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f7459ad8-35ad-4a9d-8656-d19fbc70e833" name="Changes" comment="NOX-178 Implement /api/v1/auth/register endpoint with validators and unit tests&#10;&#10;- Added POST /api/v1/auth/register route&#10;- Implemented schema validation for email, password, username, displayName&#10;- Integrated email/password validators&#10;- Implemented success + error response contracts&#10;- Created full unit test suite covering success and validation failure paths&#10;- Tests cover: valid request, invalid email/password, missing/invalid fields, empty body, non-JSON">
      <change afterPath="$PROJECT_DIR$/.idea/dictionaries/project.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/app/tests/unit/dev.db" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/app/tests/unit/test_api_auth_register.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/app/tests/unit/test_auth_validators.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/app/validators/auth_validators.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/project-nox.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/project-nox.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/alembic/env.py" beforeDir="false" afterPath="$PROJECT_DIR$/backend/alembic/env.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/app/api/v1/base.py" beforeDir="false" afterPath="$PROJECT_DIR$/backend/app/api/v1/base.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/app/core/db.py" beforeDir="false" afterPath="$PROJECT_DIR$/backend/app/core/db.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/app/schemas/user.py" beforeDir="false" afterPath="$PROJECT_DIR$/backend/app/schemas/user.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/app/services/user.py" beforeDir="false" afterPath="$PROJECT_DIR$/backend/app/services/user.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Unit Test" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;justin-cagle&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/justin-cagle/project-nox.git&quot;,
    &quot;accountId&quot;: &quot;f62d5ab7-2132-4c7f-a272-86727cecba1d&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2xQucYDXqOUnmWNsei75BHeiyyZ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "Python tests.Python tests for test_api_auth_register.test_empty_body.executor": "Run",
    "Python tests.Python tests for test_api_auth_register.test_invalid_email.executor": "Run",
    "Python tests.Python tests for test_api_auth_register.test_invalid_field_type.executor": "Run",
    "Python tests.Python tests for test_api_auth_register.test_invalid_password.executor": "Run",
    "Python tests.Python tests for test_api_auth_register.test_missing_field.executor": "Run",
    "Python tests.Python tests for test_api_auth_register.test_non_json_body.executor": "Run",
    "Python tests.Python tests in test_api_auth_register.py.executor": "Run",
    "Python tests.Python tests in test_auth_validators.py.executor": "Run",
    "Python.815dd23ede05_create_user_table.executor": "Run",
    "Python.auth_validators.executor": "Run",
    "Python.main.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "feature/NOX-178-auth-register-endpoint-",
    "ignore.virus.scanning.warn.message": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\jcagl\PycharmProjects\PythonProject\dev\project-nox\backend" />
      <recent name="C:\Users\jcagl\PycharmProjects\PythonProject\dev\project-nox" />
      <recent name="C:\Users\jcagl\PycharmProjects\PythonProject\dev\project-nox\backend\app\" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="Python tests for test_api_auth_register.test_empty_body" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="project-nox" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/backend/app/tests/unit" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_api_auth_register.test_empty_body&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_api_auth_register.test_invalid_field_type" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="project-nox" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/backend/app/tests/unit" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_api_auth_register.test_invalid_field_type&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_api_auth_register.test_invalid_password" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="project-nox" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/backend/app/tests/unit" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_api_auth_register.test_invalid_password&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_api_auth_register.test_missing_field" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="project-nox" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/backend/app/tests/unit" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_api_auth_register.test_missing_field&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_api_auth_register.test_non_json_body" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="project-nox" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/backend/app/tests/unit" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_api_auth_register.test_non_json_body&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for test_api_auth_register.test_empty_body" />
        <item itemvalue="Python tests.Python tests for test_api_auth_register.test_invalid_field_type" />
        <item itemvalue="Python tests.Python tests for test_api_auth_register.test_non_json_body" />
        <item itemvalue="Python tests.Python tests for test_api_auth_register.test_missing_field" />
        <item itemvalue="Python tests.Python tests for test_api_auth_register.test_invalid_password" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-PY-251.25410.159" />
        <option value="bundled-python-sdk-e0ed3721d81e-36ea0e71a18c-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.25410.159" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f7459ad8-35ad-4a9d-8656-d19fbc70e833" name="Changes" comment="" />
      <created>1747882703678</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1747882703678</updated>
      <workItem from="1747882706592" duration="6496000" />
      <workItem from="1747896275449" duration="3510000" />
      <workItem from="1747900563916" duration="4512000" />
      <workItem from="1747930322709" duration="6103000" />
    </task>
    <task id="LOCAL-00001" summary="Repo creation">
      <option name="closed" value="true" />
      <created>1747888886473</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1747888886473</updated>
    </task>
    <task id="LOCAL-00002" summary="Repo creation">
      <option name="closed" value="true" />
      <created>1747892255708</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1747892255708</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Repo creation" />
    <MESSAGE value="Initial backend project structure with FastAPI, SQLAlchemy, Alembic, and user creation endpoint" />
    <MESSAGE value="NOX-178 Implement /api/v1/auth/register endpoint with validators and unit tests&#10;&#10;- Added POST /api/v1/auth/register route&#10;- Implemented schema validation for email, password, username, displayName&#10;- Integrated email/password validators&#10;- Implemented success + error response contracts&#10;- Created full unit test suite covering success and validation failure paths&#10;- Tests cover: valid request, invalid email/password, missing/invalid fields, empty body, non-JSON" />
    <option name="LAST_COMMIT_MESSAGE" value="NOX-178 Implement /api/v1/auth/register endpoint with validators and unit tests&#10;&#10;- Added POST /api/v1/auth/register route&#10;- Implemented schema validation for email, password, username, displayName&#10;- Integrated email/password validators&#10;- Implemented success + error response contracts&#10;- Created full unit test suite covering success and validation failure paths&#10;- Tests cover: valid request, invalid email/password, missing/invalid fields, empty body, non-JSON" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/project_nox$.coverage" NAME=" Coverage Results" MODIFIED="1748829236431" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/backend/app/tests/unit" />
    <SUITE FILE_PATH="coverage/project_nox$main.coverage" NAME="main Coverage Results" MODIFIED="1747894438005" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/backend/app" />
    <SUITE FILE_PATH="coverage/project_nox$815dd23ede05_create_user_table.coverage" NAME="815dd23ede05_create_user_table Coverage Results" MODIFIED="1747904040323" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/backend/alembic/versions" />
    <SUITE FILE_PATH="coverage/project_nox$auth_validators.coverage" NAME="auth_validators Coverage Results" MODIFIED="1748809544599" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/backend/app/validators" />
  </component>
</project>